@using Temple.Net.Models
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject AppDbContext context
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<style>
    body {
        overflow-x: scroll;
    }
</style>

<style>
    .selected {
        background-color: #1E88E5 !important;
    }
    .selected > td {
        color: white !important;
    }
    .selected > td .mud-input {
        color: white !important;
    }
</style>

<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraLarge"
                   CloseButton="true"
                   BackdropClick="false"
                   NoHeader="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true"/>

<MudTable T="Temple" Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" 
          Filter="new Func<Temple,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem"
          CommitEditTooltip="Commit Edit"
          OnCommitEditClick="@(() => Snackbar.Add("Commit Edit Handler Invoked"))"
          EditButtonPosition="@editButtonPosition" EditTrigger="@editTrigger" OnRowClick="@RowClickEvent"
          @ref="mudTable" RowClass="cursor-pointer">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Храмы</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Найти" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Name)">Название</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Quantity)">Количество прихожан</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.DateStart)">Год основания</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.DateEnd)">Год закрытия</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Province)">Губерния</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.District)">Район</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.RayonDistrict)">Район округа</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Region)">Область</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Type)">Тип</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.RayonRegion)">Район области</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.SeparateRegion)">Отдельный район</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.TypeLocality)">Тип населенного пункта</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Locality)">Населеный пункт</MudTableSortLabel></MudTh>
        @* <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Oriention.Oriention)">Церковная ориентаиця</MudTableSortLabel></MudTh> *@
        @* <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Oriention.YearFall)">Год отпадения</MudTableSortLabel></MudTh> *@
        @* <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Oriention.YearRefund)">Год возрата</MudTableSortLabel></MudTh> *@
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.AppointmentsAfterEnd.Appointmenrs)">Назначение после закрытия</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.AppointmentsAfterEnd.Year)">Год приспособления</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.YearAdaptation)">Год основания</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.YearDestruction)">Год уничтожения</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Ocrug)">Округ</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.Counties)">Уезды</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.OrientationDiocesse)">Ориентация епапрхии</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Temple, object>(x=>x.TempleNameOnMap)">Место на карте</MudTableSortLabel></MudTh>
    </HeaderContent>
    <ColGroup>
        @if (applyButtonPosition.DisplayApplyButtonAtStart() || (editButtonPosition.DisplayEditButtonAtStart() && editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width:50px;" />
        }
        <col style="width:50px;" />
        <col style="width:80px;" />
        <col style="width:50%;" />
        <col />
        <col />
        @if (applyButtonPosition.DisplayApplyButtonAtEnd() || (editButtonPosition.DisplayEditButtonAtEnd() && editTrigger == TableEditTrigger.EditButton))
        {
            <col style="width:50px;" />
        }
    </ColGroup>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Locality">@context.Quantity</MudTd>
        <MudTd DataLabel="DateStart">@context.DateStart</MudTd>
        <MudTd DataLabel="DateEnd">@context.DateEnd</MudTd>
        <MudTd DataLabel="Province">@context.Province</MudTd>
        <MudTd DataLabel="District">@context.District</MudTd>
        <MudTd DataLabel="RayonDistrict">@context.RayonDistrict</MudTd>
        <MudTd DataLabel="Region">@context.Region</MudTd>
        <MudTd DataLabel="Type">@context.Type</MudTd>
        <MudTd DataLabel="RayonDistrict">@context.RayonDistrict</MudTd>
        <MudTd DataLabel="SeparateRegion">@context.SeparateRegion</MudTd>
        <MudTd DataLabel="TypeLocality">@context.TypeLocality</MudTd>
        <MudTd DataLabel="Locality">@context.Locality</MudTd>
        @* <MudTd DataLabel="Oriention">@context.Oriention.Oriention</MudTd> *@
        @* <MudTd DataLabel="YearFall">@context.Oriention.YearFall</MudTd> *@
        @* <MudTd DataLabel="YearRefund">@context.Oriention.YearRefund</MudTd> *@
        <MudTd DataLabel="Appointmenrs">@context.AppointmentsAfterEnd.Appointmenrs</MudTd>
        <MudTd DataLabel="Year">@context.AppointmentsAfterEnd.Year</MudTd>
        <MudTd DataLabel="YearAdaptation">@context.YearAdaptation</MudTd>
        <MudTd DataLabel="YearDestruction">@context.YearDestruction</MudTd>
        <MudTd DataLabel="Ocrug">@context.Ocrug</MudTd>
        <MudTd DataLabel="Counties">@context.Counties</MudTd>
        <MudTd DataLabel="OrientationDiocesse">@context.OrientationDiocesse</MudTd>
        <MudTd DataLabel="TempleNameOnMap">@context.TempleNameOnMap</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
    </EditButtonContent>
</MudTable>

<MudDialog @bind-Visible="visibleModal">
    <DialogContent>
        <div>
            <AddTemple IsEdit="true" Temple="selectedItem" OnClose="HandleClose"/>
        </div>
    </DialogContent>
</MudDialog>

@code {
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private bool blockSwitch = false;
    private string searchString1 = "";
    private Temple selectedItem = null;
    private HashSet<Temple> selectedItems = new();
    private Temple elementBeforeEdit;
    private HashSet<Temple> selectedItems1 = new HashSet<Temple>();
    private TableApplyButtonPosition applyButtonPosition = TableApplyButtonPosition.End;
    private TableEditButtonPosition editButtonPosition = TableEditButtonPosition.End;
    private TableEditTrigger editTrigger = TableEditTrigger.RowClick;
    
    private int selectedRowNumber = -1;
    private MudTable<Temple> mudTable;
    private bool visibleModal = false;
    
    private void RowClickEvent(TableRowClickEventArgs<Temple> tableRowClickEventArgs)
    {
        if (selectedItem != null)
        {
            var findItem = context.Temples.FirstOrDefault(x => x.Id == selectedItem.Id);

            if (findItem != null)
            {
                visibleModal = true;
            }
        }   
    }
    
    private void Callback(TableRowClickEventArgs<Temple> obj)
    {
        throw new NotImplementedException();
    }

    private void SelectChange(Temple temple) => visibleModal = true;

    private void HideModal() => visibleModal = false;

    private void OnChange()
    {
           
    }
    
    private IEnumerable<Temple> Elements = new List<Temple>();

    protected override async Task OnInitializedAsync()
    {
        Elements = context.Temples
            .Include(t => t.AppointmentsAfterEnd)
            .Include(t => t.Oriention);
    }

    private bool FilterFunc1(Temple element) => FilterFunc(element, searchString1);

    private bool FilterFunc(Temple element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Name}".Contains(searchString))
            return true;
        return false;
    }
    
    private void HandleClose()
    {
        visibleModal = false;
    }

    private string SelectedRowClassFunc(Temple arg1, int arg2)
    {
        throw new NotImplementedException();
    }

}
