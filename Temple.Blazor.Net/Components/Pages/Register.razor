@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Temple.Net.Data
@using Temple.Net.Models
@using Temple.Net.Service
@inject UserDbContext _context
@inject UserService _userService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@page "/reg"

<Body>
    <link href="css/site.css" rel="stylesheet" />
</Body> 

<div class="container">
    <div class="row">
        <div class="col-lg-10 col-xl-9 mx-auto">
            <div class="card flex-row my-5 border-0 shadow rounded-3 overflow-hidden">
                <div class="card-body p-4 p-sm-5">
                    <h5 class="card-title text-center mb-5 fw-light fs-5">Регистрация</h5>
                    @* <EditForm Model="model" OnSubmit="Submit"> *@
                        @* <div class="form-floating mb-3"> *@
                        @*     <input type="email" class="form-control" @bind-value="model.Email"> *@
                        @*     <label>Почта</label> *@
                        @* </div> *@
                        <MudTextField @bind-Value="model.Email" Label="Почта"/>
                        @* *@
                        @* <div class="form-floating mb-3"> *@
                        @*     <input type="password" class="form-control" @bind-value="model.Password"> *@
                        @*     <label>Пароль</label> *@
                        @* </div> *@
                        <MudTextField @bind-Value="model.Password" Label="Пароль" InputType="InputType.Password"/>
                        @* *@
                        @* <div class="form-floating mb-3"> *@
                        @*     <input type="password" class="form-control" @bind-value="validPassword"> *@
                        @*     <label>Подвердите пароль</label> *@
                        @* </div> *@
                        <MudTextField @bind-Value="validPassword" Label="Подверждение пароля" InputType="InputType.Password"/>

                        <div class="d-grid mb-2" style="text-align: center; margin-top: 10px;">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@Submit">Зарегистрироваться</MudButton>
                        </div>

                        <a class="d-block text-center mt-2 small" href="/login">Имеете уже у нас аккаунт?Нажмите что бы войти</a>
                    @* </EditForm> *@
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <p>@Message</p>
</div>

@code {
    private AuthViewModel model = new();

    private string validPassword { get; set; }

    private string Message { get; set; }

    public async Task Submit()
    {
        if (model.Email == "admin@123" && model.Password == "admin")
        {
            User adminUser = new()
            {
                Id = Guid.NewGuid().ToString("N"),
                Email = model.Email,
                Role = "admin",
                PasswordHash = await _userService.CreatePasswordHashAsync(model.Password),
            };

            await _context.Users.AddAsync(adminUser);
            await _context.SaveChangesAsync();
            
            NavigationManager.NavigateTo($"Auth/singinAdmin?email={model.Email}", true);
        }

        var user = _context.Users.FirstOrDefault(x => x.Email == model.Email);

        string password = await _userService.CreatePasswordHashAsync(model.Password);
        string validPassword = await _userService.CreatePasswordHashAsync(model.Password);
        
        if (user == null && password == validPassword)
        {
            User newUser = new()
            {
                Id = Guid.NewGuid().ToString("N"),
                Email = model.Email,
                Role = "read",
                PasswordHash = await _userService.CreatePasswordHashAsync(model.Password),
            };

            await _context.Users.AddAsync(newUser);
            await _context.SaveChangesAsync();

            NavigationManager.NavigateTo($"auth/singin?email={model.Email}", true);
        }
        else
        {
            Message = "Пользователь с такой почтой уже зарегистрирован";
        }
    }
}