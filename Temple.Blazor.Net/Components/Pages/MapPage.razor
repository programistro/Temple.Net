@inject IConfiguration config
@inject IJSRuntime JSRuntime
@page "/map"
@using Microsoft.EntityFrameworkCore
@inject AppDbContext _context
@rendermode InteractiveServer

<style>
    footer {
        position: absolute;
        display: none;
    }
    /** {*/
    /*    outline: 4px solid green !important;*/
    /*}*/
</style>

<MudPopoverProvider @rendermode="InteractiveServer"/>
<MudSnackbarProvider @rendermode="InteractiveServer"/>

<MudGrid Spacing="4" Justify="Justify.Center">
    <MudItem>
        <MudCard Style="width: 228px; margin-left: 50px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Церковная ориентация" @bind-Value="selectedOriention" SelectedValuesChanged="@(values => HandleFilterChange("Orientation", values.FirstOrDefault()))">
                        @foreach (var uniqueOriention in _temples.Select(item => item.Oriention.Oriention).Where(o => o != "Пусто").Distinct())
                        {
                            <MudSelectItem Value="@uniqueOriention"/>
                        }
                    </MudSelect>
                    
                    <MudSelect T="string" Label="Епархия" @bind-Value="selectedDiocese" SelectedValuesChanged="@(value => HandleFilterChange("Diocese", value.FirstOrDefault()))">
                        @foreach (var item in _temples)
                        {
                            if (item.OrientationDiocesse != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.OrientationDiocesse}")"/>
                            }
                        }
                    </MudSelect>
                    
                    <MudSelect T="string" Label="Благочиние" @bind-Value="selectedDiocese">
                        @foreach (var item in _temples)
                        {
                            if (item.OrientationDiocesse != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.OrientationDiocesse}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem>
        <MudCard Style="width: 228px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Губерния" @bind-Value="selectedProvince">
                        @foreach (var item in _temples)
                        {
                            if (item.Province != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Province}")"/>
                            }
                        }
                    </MudSelect>
    
                    <MudSelect T="string" Label="Уезд" @bind-Value="selectedCounties">
                        @foreach (var item in _temples)
                        {
                            if (item.Counties != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Counties}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem>
        <MudCard Style="width: 228px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Округ" @bind-Value="selectedOcrug">
                        @foreach (var item in _temples)
                        {
                            if (item.Ocrug != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Ocrug}")"/>
                            }
                        }
                    </MudSelect>

                    <MudSelect T="string" Label="Район округа" @bind-Value="selectedRayonOcrug">
                        @foreach (var item in _temples)
                        {
                            if (item.RayonDistrict != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.RayonDistrict}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem>
        <MudCard Style="width: 228px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Район области" @bind-Value="selectedRayonRegion">
                        @foreach (var item in _temples)
                        {
                            if (item.SeparateRegion != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.SeparateRegion}")"/>
                            }
                        }
                    </MudSelect>

                    <MudSelect T="string" Label="Отб район" @bind-Value="selectedRegion">
                        @foreach (var item in _temples)
                        {
                            if (item.Region != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Region}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem>
        <MudCard Style="width: 228px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Храм" @bind-Value="selectedTemple">
                        @foreach (var item in _temples)
                        {
                            if (item.Name != "Пусто")
                            { 
                                <MudSelectItem Value="@($"{item.Name}")"/>  
                            }
                        }
                    </MudSelect>

                    <MudSelect T="string" Label="Тип храма" @bind-Value="selectedTempleType">
                        @foreach (var item in _temples)
                        {
                            if (item.Type != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Type}")"/>
                            }
                        }
                    </MudSelect>
                    
                    <MudSelect T="string" Label="Насленый пункт" @bind-Value="selectedLocality">
                        @foreach (var item in _temples)
                        {
                            if (item.Locality != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Locality}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem>
        <MudCard Style="width: 228px;">
            <MudCardContent>
                <div>
                    <MudSelect T="string" Label="Фамилия" @bind-Value="selectedLastName">
                        @foreach (var item in _context.Parsonalions)
                        {
                            if (item.LastName != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.LastName}")"/>
                            }
                        }
                    </MudSelect>

                    <MudSelect T="string" Label="Имя" @bind-Value="selectedName">
                        @foreach (var item in _context.Parsonalions)
                        {
                            if (item.Name != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Name}")"/>
                            }
                        }
                    </MudSelect>
                    
                    <MudSelect T="string" Label="Отчество" @bind-Value="selectedOtch">
                        @foreach (var item in _context.Parsonalions)
                        {
                            if (item.Otch != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.Otch}")"/>
                            }
                        }
                    </MudSelect>
                    
                    <MudSelect T="string" Label="Монашеское имя" @bind-Value="selectedMonaxName">
                        @foreach (var item in _context.Parsonalions)
                        {
                            if (item.MonaxName != "Пусто")
                            {
                                <MudSelectItem Value="@($"{item.MonaxName}")"/>
                            }
                        }
                    </MudSelect>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudFlexBreak/>
    <MudItem>
        <MudPaper Height="580px" Width="192vh">
            <div id="map" style="height: 580px; width: 100%;"></div>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private string selectedSeach;

    private string selectedOriention;

    /// <summary>
    /// Губеиния
    /// </summary>
    private string selectedProvince;

    ///<summary>
    /// Уезды
    /// </summary>
    private string selectedCounties;
    
    /// <summary>
    /// Церковная ориентация
    /// </summary>
    private string selectedDiocese;

    private string selectedOcrug;
    
    private string selectedRayonOcrug;
    
    private string selectedRayonRegion;
    
    private string selectedRegion;
    
    private string selectedTemple;
    
    private string selectedTempleType;
    
    ///<summary>
    /// Населеный пункт
    /// </summary>
    private string selectedLocality;

    private string selectedName;
    
    private string selectedLastName;
    
    private string selectedOtch;
    
    private string selectedMonaxName;

    IEnumerable<Temple> _temples = new List<Temple>();
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _temples = _context.Temples
                .Include(t => t.AppointmentsAfterEnd)
                .Include(t => t.Oriention);
            await JSRuntime.InvokeVoidAsync("initMap");
            await JSRuntime.InvokeVoidAsync("console.log", "Hello, world!");
            await JSRuntime.InvokeVoidAsync("disableClickHandler");
            foreach (var temple in _temples)
            {
                if (temple.Lng != 0 || temple.Lat != 0)
                {
                    await JSRuntime.InvokeVoidAsync("addMarker", temple.Lat, temple.Lng, temple.Name);
                }
            }
        }
    }

    // private async Task ChangeOriention(IEnumerable<string> obj)
    // {
    //     // await Task.Run(() =>
    //     // {
    //     await JSRuntime.InvokeVoidAsync("clearAllMarkers");
    //     // });
    //     foreach (var temple in _temples)
    //     {
    //         if (temple.Lng != 0 || temple.Lat != 0)
    //         {
    //             if (temple.Oriention.Oriention == selectedOriention)
    //             {
    //                 JSRuntime.InvokeVoidAsync("addMarker", temple.Lat, temple.Lng, temple.Name);
    //             }
    //         }
    //     }
    // }
    
    private async Task HandleFilterChange(string filterType, string filterValue)
    {
        await JSRuntime.InvokeVoidAsync("clearAllMarkers");
        foreach (var temple in _temples)
        {
            if (temple.Lng != 0 || temple.Lat != 0)
            {
                bool matchesFilter = false;
                switch (filterType)
                {
                    case "Orientation":
                        matchesFilter = temple.Oriention.Oriention == filterValue;
                        break;
                    case "Diocese":
                        matchesFilter = temple.OrientationDiocesse == filterValue;
                        break;
                }

                if (matchesFilter)
                {
                    await JSRuntime.InvokeVoidAsync("addMarker", temple.Lat, temple.Lng, temple.Name);
                }
            }
        }
    }
}