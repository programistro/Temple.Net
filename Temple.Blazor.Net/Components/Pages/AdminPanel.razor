@using Temple.Net.Data
@using Temple.Net.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer
@inject UserDbContext context
@page "/admin"

<PageTitle>Панель администратора</PageTitle>

<body>
    <link href="css/site.css" rel="stylesheet" />
</body>

<QuickGrid Items="@context.Users">
    <PropertyColumn Property="@(user => user.Name)" Sortable="true"/>
    <PropertyColumn Property="@(user => user.Role)" Sortable="true"/>
    <PropertyColumn Property="@(user => user.Name)" Sortable="true"/>
    <PropertyColumn Property="@(user => user.LastName)" Sortable="true" />
    <PropertyColumn Property="@(user => user.LastName)" Sortable="true" />
    <TemplateColumn Title="Изменить баланс пользователя">
        <Button Color="Color.Primary" @onclick="@(() => ChangeRole(context))">Изменить</Button>
    </TemplateColumn>
</QuickGrid>

<Modal @ref="changeModal" title="Изменить права доступа" UseStaticBackdrop="true" CloseOnEscape="false">
    <ModalContent>
        <ModalHeader>
            <ModalTitle>Изменить права доступа</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <input @bind-value="NewRole" class="form-control dark-theme-textbox" autocomplete="off" placeholder="Новые права">
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" @onclick="OnHideModalClick">Изменить</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<style>
    .btn-danger {
        color: #FFFFFF;
        background-color: #E11D48;
        border-color: #E11D48;
    }
</style>

@code {
    private User selectUser;
    
    private Modal changeModal = default!;

    private string NewRole;
    
    private async Task ChangeRole(User user)
    {
        selectUser = user;
        changeModal.Show();
    }
    
    private async Task OnHideModalClick()
    {
        Task.Run(() =>
        {
            if (!string.IsNullOrEmpty(NewRole))
            {
                selectUser.Role = NewRole;
                context.Users.Update(selectUser);
                context.SaveChanges();
            }
        });
        await changeModal.Hide();
    }
}