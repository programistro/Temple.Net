@using Temple.Net.Data
@using Temple.Net.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer
@attribute [Authorize(Roles = "admin")]
@inject UserDbContext context
@inject IDialogService DialogService
@page "/admin"

<PageTitle>Панель администратора</PageTitle>

<body>
    <link href="css/site.css" rel="stylesheet" />
</body>

<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   CloseButton="false"
                   BackdropClick="false"
                   NoHeader="true"
                   Position="DialogPosition.CenterLeft"
                   CloseOnEscapeKey="false"/>

<QuickGrid Items="@context.Users">
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="@(user => user.Email)" Sortable="true"/>
    <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="@(user => user.Role)" Sortable="true"/>
    <Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn Title="Изменить права пользователя">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="@(() => ChangeRole(context))">Изменить</MudButton>
    </Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn>
</QuickGrid>

<MudGrid Justify="Justify.Center">
    <MudDialog @bind-Visible="visible">
        <TitleContent>
            Изменить права доступа
        </TitleContent>
        <DialogContent>
            <MudTextField T="string" Label="Права" @bind-value="NewRole"></MudTextField>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Primary" OnClick="OnHideModalClick">Отмена</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnChangeClick">Изменить</MudButton>
        </DialogActions>
    </MudDialog>
</MudGrid>

<style>
    .btn-danger {
        color: #FFFFFF;
        background-color: #E11D48;
        border-color: #E11D48;
    }
</style>

@code {
    private User selectUser;

    private bool visible = false;
    // private Modal changeModal = default!;

    private string NewRole;
    
    private async Task ChangeRole(User user)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        selectUser = user;
        // changeModal.Show();
        visible = true;
    }
    
    private async Task OnChangeClick()
    {
        selectUser.Role = NewRole;
        context.Users.Update(selectUser);
        context.SaveChanges();
        visible = false;
    }

    private void OnHideModalClick(MouseEventArgs obj)
    {
        visible = false;
    }
    
}