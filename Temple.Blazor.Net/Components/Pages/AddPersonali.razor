@using OpenStreetMapForBlazor
@using Temple.Net.Models
@inject IConfiguration config
@inject IJSRuntime JSRuntime
@using System.Security.Claims
@using Temple.Net.Service
@inject AppDbContext _context
@inject IWebHostEnvironment Environment
@inject NavigationManager NavigationManager

<MudPopoverProvider @rendermode="InteractiveServer"/>
<MudSnackbarProvider @rendermode="InteractiveServer"/>

<MudContainer MaxWidth="MaxWidth.Large" Style="width: 45%; margin-bottom: 20px;">
    <MudCard>
        <MudCardContent>
            <h5 class="card-title text-center mb-3 fw-light fs-5">Добавить персоналии</h5>

            <MudTextField T="string?" @bind-Value="_parsonalion.LastName" Label="Фамилия"/>

            <MudTextField T="string?" @bind-Value="_parsonalion.Name" Label="Имя"/>

            <MudTextField T="string?" @bind-Value="_parsonalion.Otch" Label="Отчество"/>

            <MudTextField T="string?" @bind-Value="_parsonalion.MonaxName" Label="Монашеское имя"/>

            <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                <MudDatePicker T="DateTime?" DateFormat="yyyy" @bind-Date="_parsonalion.Born" Label="Год рождения"/>

                <MudTooltip Text="Можете не вписывать значение если не известно">
                    <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                </MudTooltip>
            </div>

            <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                <MudDatePicker T="DateTime?" DateFormat="yyyy" Label="Год смерти"  @bind-Date="_parsonalion.Death"/>

                <MudTooltip Text="Можете не вписывать значение если не известно">
                    <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                </MudTooltip>
            </div>

            <MudTextField T="string?" @bind-Value="_parsonalion.PlaceOfDeath" Label="Место смерти"/>

            <MudTextField T="string?" @bind-Value="_parsonalion.PlaceBirths" Label="Место рождение"/>


            <MudAutocomplete T="string" Label="Национальность" @bind-Value="selectedNation" SearchFunc="@SearchNation"
                             ResetValueOnEmptyText="@resetValueOnEmptyText"
                             CoerceText="@coerceText" CoerceValue="@coerceValue" AdornmentColor="Color.Primary" />

            <MudAutocomplete T="string" Label="Социальное положение" @bind-Value="selectedSocial" SearchFunc="@SearchSocial"
                             ResetValueOnEmptyText="@resetValueOnEmptyText"
                             CoerceText="@coerceText" CoerceValue="@coerceValue" AdornmentColor="Color.Primary" />

            <br/>

            <div>
                <h3 class="card-title text-center mb-3 fw-light fs-5">Образование</h3>

                <div>
                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="yyyy" Label="Год поступление" @bind-Date="_parsonalion.Education.YearAdmission"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <MudTextField @bind-Value="_parsonalion.Education.Institution" Label="Учреждение образования"/>

                    <h4 class="card-title text-center mb-3 fw-light fs-5">Уровень образования</h4>

                    <div>
                        <MudSelect T="int" @bind-Value="@selectedLVLEductaion">
                            <MudSelectItem Value="1">Высшее</MudSelectItem>
                            <MudSelectItem Value="2">Среднее</MudSelectItem>
                            <MudSelectItem Value="3">Неполное-среднее</MudSelectItem>
                            <MudSelectItem Value="4">Начальное</MudSelectItem>
                            <MudSelectItem Value="5">Не известно</MudSelectItem>
                        </MudSelect>
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="yyyy" DisplayFormat="yyyy" Label="Год выпуска" @bind-Date="_parsonalion.Education.YearOfRease"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>
                </div>
            </div>

            <div>
                <h3 class="card-title text-center mb-3 fw-light fs-5">Меры государственного воздействия</h3>

                <div>
                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy"  Label="Год ареста" @bind-Date="_parsonalion.State.YearArrest"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <h4 class="card-title text-center mb-3 fw-light fs-5">Приговор</h4>

                    <div>
                        <MudAutocomplete T="string" Label="Приговор" @bind-Value="selectedVerdict" SearchFunc="@SearchVerdicts"
                                         ResetValueOnEmptyText="@resetValueOnEmptyText"
                                         CoerceText="@coerceText" CoerceValue="@coerceValue" AdornmentColor="Color.Primary" />
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy" Label="Год приговора" @bind-Date="_parsonalion.State.YearSentence"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy" Label="Год реабелитации" @bind-Date="_parsonalion.State.YearRehabilitation"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <MudTextField @bind-Value="_parsonalion.State.Rehabilitaion" Label="Реабилитирующий орган"/>
                </div>
            </div>

            <div>
                <h3 class="card-title text-center mb-3 fw-light fs-5">Церковная ориентация</h3>

                <div>
                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy" Label="Год отпадения" @bind-Date="_parsonalion.Oriention.YearFall"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <MudTextField @bind-Value="_parsonalion.Oriention.Oriention" Label="Церковная ориентация"/>

                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy" Label="Год возрата" @bind-Date="_parsonalion.Oriention.YearRefund"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>
                </div>
            </div>

            <div>
                <h3 class="card-title text-center mb-3 fw-light fs-5">Сан</h3>

                <div>
                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy"  Label="Год рукоположения" @bind-Date="_parsonalion.Sun.YearOrdinations"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <MudAutocomplete T="string" Label="Награда" @bind-Value="selectedSunName" SearchFunc="@SearchAward"
                                     ResetValueOnEmptyText="@resetValueOnEmptyText"
                                     CoerceText="@coerceText" CoerceValue="@coerceValue" AdornmentColor="Color.Primary" />

                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy"  Label="Год снятия сана" @bind-Date="_parsonalion.Sun.YearDefrock"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>
                </div>
            </div>

            <div>
                <h3 class="card-title text-center mb-3 fw-light fs-5">Награды</h3>

                <div>
                    <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                        <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy"  Label="Год награждения" @bind-Date="_parsonalion.Award.YearAward"/>

                        <MudTooltip Text="Можете не вписывать значение если не известно">
                            <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                        </MudTooltip>
                    </div>

                    <MudAutocomplete T="string" Label="Награда" @bind-Value="selectedAward" SearchFunc="@SearchAward"
                                     ResetValueOnEmptyText="@resetValueOnEmptyText"
                                     CoerceText="@coerceText" CoerceValue="@coerceValue" AdornmentColor="Color.Primary" />
                </div>
            </div>

            <div style="margin-top: 10px; margin-bottom: 10px; display: flex; align-items: center; text-align: center; justify-content: space-between;">
                <MudDatePicker T="DateTime?" DateFormat="dd.MM.yyyy"  Label="Год упоминания" @bind-Date="_parsonalion.YearMention"/>

                <MudTooltip Text="Можете не вписывать значение если не известно">
                    <MudIconButton Icon="@Icons.Material.Filled.QuestionMark" aria-label="Вопрос" Size="Size.Small"/>
                </MudTooltip>
            </div>

            <MudTextField @bind-Value="_parsonalion.Note" Label="Примечания"/>

            <MudTextField @bind-Value="_parsonalion.Source" Label="Источник информации (в виде библиографической записи)"/>

            <div class="input-file-row">
                <label class="input-file">
                    <InputFile OnChange="LoadPhoto" accept="image/*"/>
                    <span>Выберите фотографию</span>
                </label>
                <div class="input-file-list"></div>
            </div>

            <div class="input-file-row" style="margin-top: 10px;">
                <label class="input-file">
                    <InputFile OnChange="LoadFile"/>
                    <span>Выберите файл</span>
                </label>
                <div class="input-file-list"></div>
            </div>

            <div class="d-grid mb-2">
                <MudButton Style="margin-top: 20px;" Color="Color.Primary" Variant="Variant.Filled" OnClick="Sumbit">Добавить</MudButton>
            </div>
        </MudCardContent>
    </MudCard>
</MudContainer>

    @code {
    public MapPosition position;
    public bool btnActive;

    private string selectedSunName;

    private string selectedAward;

    private string selectedNation;

    private string selectedSocial;

    private int selectedLVLEductaion = 1;

    private string selectedVerdict;

    MapPosition? defPosition;

    private Parsonalion? _parsonalion = new()
    {
        Id = Guid.NewGuid().ToString("N"),
        Sun = new()
        {
            Id = Guid.NewGuid().ToString("N")
        },
        Award = new()
        {
            Id = Guid.NewGuid().ToString("N")
        },
        Education = new()
        {
            Id = Guid.NewGuid().ToString("N")
        },
        State = new()
        {
            Id = Guid.NewGuid().ToString("N")
        },
        Oriention = new()
        {
            Id = Guid.NewGuid().ToString("N")
        }
    };

    private long maxFileSize = 1024 * 500;

    private async Task LoadPhoto(InputFileChangeEventArgs e)
    {
        var trustedFileName = $"{Guid.NewGuid().ToString("N").Remove(6)}.png";

        var path = $@"wwwroot/photos/{trustedFileName}";

        await using FileStream fs = new(path, FileMode.Create);
        await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);

        _parsonalion.Photo = path;
    }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        var path = $@"wwwroot/files/{e.File.Name}";

        await using FileStream fs = new(path, FileMode.Create);
        await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);

        _parsonalion.File = path;
    }

    protected override void OnInitialized()
    {
        defPosition = new MapPosition() { Lat = config.GetValue<double>("Main:DefLat"), Lng = config.GetValue<double>("Main:DefLng") };
    }

    public void MapClickEvent(MapClickEventArgs args)
    {
        //events.Add(DateTime.Now, $"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}");

        if (args != null) position = args.Position;

        //btnActive = !(position.Lng == defPosition.Lng && position.Lat == defPosition.Lat);
        //actualJson = JsonConvert.SerializeObject(args);

        //StateHasChanged();
    }

    private string[] awards =
    {
        "Набедренник", "Камилавка фиолетового цвета", "Наперсный крест", "Палица", "Крест с украшениями",
        "Служение Божественной литургии с отверстыми Царскими вратами до Херувимской песни",
        "Служение Божественной литургии с отверстыми Царскими Вратами до 'Отче наш'", "Митра",
        "Право ношения второго наперсного креста с украшениями", "Патриарший наперстый крест", "Двойной орарь",
    };

    private string[] sunNames =
    {
        "Архидиакон", "Архиепископ", "Диакон", "Епископ", "Игумен", "Иеродиакон", "Иеромонах", "Митрополит",
        "Монах", "Пономарь", "Послушник", "Причетник", "Протодиакон", "Протоиерей", "Протопресвитер", "Псаломщик",
        "Священник"
    };

    private string[] verdicts =
    {
        "10 лет тюремного заключения условно", "15 лет тюремного заключения с применением общественных работ", 
        "1 год исправительных трудовых работ", "1 год принудительных работ", "2 год принудительных работ", 
        "2 года строгой изоляции", "2 года тюрьмы с последующей ссылкой", "3 года строгой изоляции", 
        "3 месяца принудительных работ", "5 лет ИТЛ с высылкой семьи на Север", "5 лет строгой изоляции", 
        "5 лет строгой изоляции с конфискацией имущества и 3 года поражения в гражданских правах", 
        "6 месяцев исправительных работ", "6 месяцев принудительных работ", "3 месяца принудительных работ", 
        "8 лет принудительных работ со строгой изоляцией и конфискацией имущества", "Бессрочная административная высылка", 
        "Бессрочная ссылка", "Бессрочное заключение в концлагерь с применением принудительных работ", 
        "Бессрочное тюремное заключение с тягчайшими принудительными работами без права свидания с родными", 
        "Высшая мера наказания (расстрел)", "Высшая мера наказания (расстрел) с заменой на 10 лет заключения в ИТЛ", 
        "Высшая мера наказания (расстрел) с конфискацией имущества", "Высылка"
    };

    private string[] nations =
    {
        "Белорус", "Русский", "Украинец"
    };
    
    private string[] socials =
    {
        "Из крестьян", "Из мещан", "Из духовенства", "Из служащих", "Из дворян"
    };

    private bool coerceText;
    
    private bool coerceValue;
    
    private bool resetValueOnEmptyText;
    
    private async Task<IEnumerable<string>> SearchAward(string value, CancellationToken token)
    {
        await Task.Delay(5, token);

        if (string.IsNullOrEmpty(value))
            return awards;
        return awards.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    
    private async Task<IEnumerable<string>> SearchSunName(string value, CancellationToken token)
    {
        await Task.Delay(5, token);

        if (string.IsNullOrEmpty(value))
            return sunNames;
        return sunNames.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    
    private async Task<IEnumerable<string>> SearchVerdicts(string value, CancellationToken token)
    {
        await Task.Delay(5, token);

        if (string.IsNullOrEmpty(value))
            return verdicts;
        return verdicts.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    
    private async Task<IEnumerable<string>> SearchSocial(string value, CancellationToken token)
    {
        await Task.Delay(5, token);

        if (string.IsNullOrEmpty(value))
            return socials;
        return socials.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    } 
    
    private async Task<IEnumerable<string>> SearchNation(string value, CancellationToken token)
    {
        await Task.Delay(5, token);

        if (string.IsNullOrEmpty(value))
            return nations;
        return nations.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
    
    private async Task Sumbit()
    {
        switch (selectedLVLEductaion)
        {
            case 1:
                _parsonalion.LVLEducation = "Высшее образование";
                break;
            case 2:
                _parsonalion.LVLEducation = "Среднее образование";
                break;
            case 3:
                _parsonalion.LVLEducation = "Неполное среднее образование.";
                break;
            case 4:
                _parsonalion.LVLEducation = "Начальное";
                break;
            case 5:
                _parsonalion.LVLEducation = "Не известно";
                break;
        }
        
        _parsonalion.FillEmptyFields();
        _parsonalion.Education.FillEmptyFields();
        _parsonalion.Oriention.FillEmptyFields();
        _parsonalion.Award.FillEmptyFields();
        _parsonalion.Sun.FillEmptyFields();
        _parsonalion.State.FillEmptyFields();
        
        _context.Parsonalions.Add(_parsonalion);
        _context.SaveChanges();
        
        NavigationManager.NavigateTo("/?show=true&obj=персоналии", true);
    }
}