@page "/add/pashinioners"
@using OpenStreetMapForBlazor
@using Temple.Net.Models
@using Blazorise
@using Temple.Blazor.Net.Components.Layout
@inject IConfiguration config
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@using System.Security.Claims
@inject AppDbContext _context
@using Microsoft.AspNetCore.Components.Authorization
@using Newtonsoft.Json
@using Temple.Net.Data
@inject NavigationManager NavigationManager 
@rendermode InteractiveServer

<div class="row">
    <div class="col-lg-10 col-xl-9 mx-auto">
        <div class="card flex-row my-5 border-0 shadow rounded-3 overflow-hidden">
            <div class="card-body p-4 p-sm-5">
                <h5 class="card-title text-center mb-3 fw-light fs-5">Добавить пригожании</h5>
                <EditForm Model="@_parishioners" OnSubmit="Sumbit">
                    <div class="form-floating mb-2">
                        <input type="text" class="form-control" @bind-value="_parishioners.LastName">
                        <label>Фамилия</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input type="text" class="form-control" @bind-value="_parishioners.Name">
                        <label>Имя</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input type="text" class="form-control" @bind-value="_parishioners.Otch">
                        <label>Отчество</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.TempleName">
                        <label>Название храма</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Age" type="number">
                        <label>Возраст</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Gender">
                        <label>Пол</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Adress">
                        <label>Адрес</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Social">
                        <label>Социальное происхождение</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.SocialStatus">
                        <label>/Общественное и служебное положение c 1914</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.EstateBeforeRevolution">
                        <label>Принадлежность к сословию до революции</label>
                    </div>

                    <div>
                        <h3 class="card-title text-center mb-3 fw-light fs-5">Имущественное положение</h3>

                        <Select TValue="int" @bind-SelectedValue="@selectedSocial">
                            <SelectItem Value="1">Бедняк</SelectItem>
                            <SelectItem Value="2">Средняк</SelectItem>
                            <SelectItem Value="3">Домовладелец</SelectItem>
                            <SelectItem Value="4">Без имущества</SelectItem>
                        </Select>
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px;">
                        <DatePicker TValue="DateTime?" InputFormat="yyy" DisplayFormat="yyyy" Placeholder="Время присоединения к религиозному культу" @bind-Date="_parishioners.DateJoinRelligios"/>
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px;">
                        <DatePicker TValue="DateTime?" InputFormat="yyy" DisplayFormat="yyyy" Placeholder="Год упоменания" @bind-Date="_parishioners.YearMention"/>
                    </div>

                    <div style="margin-top: 10px; margin-bottom: 10px;">
                        <DatePicker TValue="DateTime?" InputFormat="yyy" DisplayFormat="yyyy" Placeholder="Год возрата" @bind-Date="_parishioners.YearRestart"/>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Note">
                        <label>Премичания</label>
                    </div>

                    <div class="form-floating mb-2">
                        <input class="form-control" @bind-value="_parishioners.Source">
                        <label>Источники</label>
                    </div>

                    <div style="margin-top: 10px;">
                        <div class="input-file-row">
                            <label class="input-file">
                                <InputFile OnChange="LoadPhoto" accept="image/*"/>
                                <span>Выберите фотографию</span>
                            </label>
                            <div class="input-file-list"></div>
                        </div>

                        <div class="input-file-row">
                            <label class="input-file">
                                <InputFile OnChange="LoadFile"/>
                                <span>Выберите файл</span>
                            </label>
                            <div class="input-file-list"></div>
                        </div>
                    </div>
                    
                    <div class="d-grid mb-2">
                        <button class="btn btn-lg btn-primary btn-login fw-bold text-uppercase" style="margin-top: 20px;" type="submit">Добавить</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    
    private bool IsAuth;
    
    public MapPosition position;
    public bool btnActive;

    private int selectedItem;
    
    MapPosition? defPosition;

    private Parishioners? _parishioners = new()
    {
        Id = Guid.NewGuid().ToString("N")
    };

    protected override void OnInitialized()
    {
        defPosition = new MapPosition() { Lat = config.GetValue<double>("Main:DefLat"), Lng = config.GetValue<double>("Main:DefLng") };
        
        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
        {
            IsAuth = true;
        }
        else
        {
            IsAuth = false;
        }
    }
    
    private long maxFileSize = 1024 * 500;

    private int selectedSocial;

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        var path = $@"wwwroot/files/{e.File.Name}";

        await using FileStream fs = new(path, FileMode.Create);
        await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);

        _parishioners.File = path;
    }
    
    private async Task LoadPhoto(InputFileChangeEventArgs e)
    {
        var path = $@"wwwroot/photos/{e.File.Name}";

        await using FileStream fs = new(path, FileMode.Create);
        await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);

        _parishioners.Photo = path;
    }
    
    public void MapClickEvent(MapClickEventArgs args)
    {
        //events.Add(DateTime.Now, $"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}");

        if (args != null) position = args.Position;

        //btnActive = !(position.Lng == defPosition.Lng && position.Lat == defPosition.Lat);
        //actualJson = JsonConvert.SerializeObject(args);

        //StateHasChanged();
    }

    private async Task Sumbit()
    {
        switch (selectedSocial)
        {
            case 1:
                _parishioners.PropertyStatus = "Бедняк";
                break;
            case 2:
                _parishioners.PropertyStatus = "средняк";
                break;
            case 3:
                _parishioners.PropertyStatus = "домовладелец";
                break;
            case 4:
                _parishioners.PropertyStatus = "без имущества";
                break;
        }
        
        await _context.Parishioners.AddAsync(_parishioners);
        await _context.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
}