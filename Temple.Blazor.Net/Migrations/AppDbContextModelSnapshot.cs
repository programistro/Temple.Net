// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Temple.Net.Data;

#nullable disable

namespace Temple.Blazor.Net.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Temple.Net.Models.AppointmentsAfterEnd", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Appointmenrs")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Year")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppointmentsAfterEnd");
                });

            modelBuilder.Entity("Temple.Net.Models.Award", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearAward")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Award");
                });

            modelBuilder.Entity("Temple.Net.Models.Education", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Institution")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearAdmission")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearOfRease")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("Temple.Net.Models.MeasuresState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rehabilitaion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Verdict")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearArrest")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearRehabilitation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearSentence")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MeasuresState");
                });

            modelBuilder.Entity("Temple.Net.Models.Parishioners", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateJoinRelligios")
                        .HasColumnType("TEXT");

                    b.Property<string>("EstateBeforeRevolution")
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("Otch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Social")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("TempleName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearMention")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearRestart")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Parishioners");
                });

            modelBuilder.Entity("Temple.Net.Models.Parsonalion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AwardId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Born")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Death")
                        .HasColumnType("TEXT");

                    b.Property<string>("EducationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("File")
                        .HasColumnType("TEXT");

                    b.Property<string>("LVLEducation")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonaxName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrientionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Otch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceBirths")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfDeath")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialOrigin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SunId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearMention")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AwardId");

                    b.HasIndex("EducationId");

                    b.HasIndex("OrientionId");

                    b.HasIndex("StateId");

                    b.HasIndex("SunId");

                    b.ToTable("Parsonalions");
                });

            modelBuilder.Entity("Temple.Net.Models.Sun", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("SunName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearDefrock")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearOrdinations")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sun");
                });

            modelBuilder.Entity("Temple.Net.Models.Temple", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppointmentsAfterEndId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locality")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrientationDiocesse")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrientionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ParshYear")
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RayonDistrict")
                        .HasColumnType("TEXT");

                    b.Property<string>("RayonRegion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeparateRegion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeLocality")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearAdaptation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearDestruction")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentsAfterEndId");

                    b.HasIndex("OrientionId");

                    b.ToTable("Temples");
                });

            modelBuilder.Entity("Temple.Net.Models.TempleOriention", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Oriention")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearFall")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("YearRefund")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TempleOriention");
                });

            modelBuilder.Entity("Temple.Net.Models.Parsonalion", b =>
                {
                    b.HasOne("Temple.Net.Models.Award", "Award")
                        .WithMany()
                        .HasForeignKey("AwardId");

                    b.HasOne("Temple.Net.Models.Education", "Education")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("Temple.Net.Models.TempleOriention", "Oriention")
                        .WithMany()
                        .HasForeignKey("OrientionId");

                    b.HasOne("Temple.Net.Models.MeasuresState", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("Temple.Net.Models.Sun", "Sun")
                        .WithMany()
                        .HasForeignKey("SunId");

                    b.Navigation("Award");

                    b.Navigation("Education");

                    b.Navigation("Oriention");

                    b.Navigation("State");

                    b.Navigation("Sun");
                });

            modelBuilder.Entity("Temple.Net.Models.Temple", b =>
                {
                    b.HasOne("Temple.Net.Models.AppointmentsAfterEnd", "AppointmentsAfterEnd")
                        .WithMany()
                        .HasForeignKey("AppointmentsAfterEndId");

                    b.HasOne("Temple.Net.Models.TempleOriention", "Oriention")
                        .WithMany()
                        .HasForeignKey("OrientionId");

                    b.Navigation("AppointmentsAfterEnd");

                    b.Navigation("Oriention");
                });
#pragma warning restore 612, 618
        }
    }
}
